name: Deploy ACTION

inputs:
  base_update:
    required: false
    type: boolean
  exclusive_update:
    description: 'Turn off database during update'
    required: false
    type: boolean
    default: false
  MAIN_PATH:
    required: true
    type: string
  ODOO_SERVICE:
    required: true
    type: string
  SERVER_USER:
    required: true
    type: string
  USE_VENV:
    required: true
    type: string
  ODOO_DB:
    required: false
    type: string
  CICD_TOKEN:
    required: true

runs:
  using: 'composite'
  steps:
    - name: Check settings
      run: |
        echo -e "\033[32m============= CHECKING PARAMETERS =============\033[0m"
        if [[ ! -d "$MAIN_PATH" ]]; then
          echo "Folder $MAIN_PATH does not exist."
          exit 100
        fi
        if [[ -z "$SERVER_USER" ]]; then
          echo "SERVER_USER variable is not set."
          exit 100
        fi
        if [[ -z "$ODOO_SERVICE" ]]; then
          echo "ODOO_SERVICE variable is not set."
          exit 100
        fi
      shell: bash
      env:
        MAIN_PATH: ${{ inputs.MAIN_PATH }}
        ODOO_SERVICE: ${{inputs.ODOO_SERVICE}}
        SERVER_USER: ${{inputs.SERVER_USER}}

    - name: Log checkout
      run: echo -e "\033[32m============= PULLING THE CICD REPO =============\033[0m"
      shell: bash

    - uses: actions/checkout@v4.2.2
      with:
        repository: biko-solutions/cicd_workflows
        token: ${{ inputs.CICD_TOKEN }}
        fetch-depth: 0
        show-progress: false

    - name: Set venv
      id: create-python-script
      run: |
        echo -e "::group::\033[32m ============= CREATING PYTHON VENV =============\033[0m"
        python3 -m venv ./venv
        source ./venv/bin/activate
        pip install psutil
        deactivate
        echo "PYTHON_SCRIPT=$(pwd)/venv/bin/python3 $(pwd)/scripts/update_odoo.py" >> $GITHUB_OUTPUT
        echo "::endgroup::"
      shell: bash

    - name: Update repository
      uses: biko-solutions/cicd_workflows/.github/actions/self-hosted-run/biko-struct/update-repo@main
      with:
        MAIN_PATH: ${{ inputs.MAIN_PATH }}
        SERVER_USER: ${{ inputs.SERVER_USER }}

    - name: Get database list
      id: get-db-list
      uses: biko-solutions/cicd_workflows/.github/actions/self-hosted-run/common/get-db-list@main
      with:
        MAIN_PATH: ${{inputs.MAIN_PATH}}
        SERVER_USER: ${{inputs.SERVER_USER}}
        USE_VENV: ${{inputs.USE_VENV}}
        ODOO_CONFIG: ${{inputs.MAIN_PATH}}/config_local/odoo-server.conf
        ODOO_DB: ${{inputs.ODOO_DB}}

    - name: Soft update (only changes)
      if: ${{ inputs.base_update == 'false' }}
      uses: biko-solutions/cicd_workflows/.github/actions/self-hosted-run/common/update-changed@main
      with:
        ODOO_SERVICE: ${{ inputs.ODOO_SERVICE }}
        USE_VENV: ${{ inputs.USE_VENV }}
        SERVER_USER: ${{ inputs.SERVER_USER }}
        PYTHON_SCRIPT: ${{ steps.create-python-script.outputs.PYTHON_SCRIPT }}
        DB_LIST: ${{ steps.get-db-list.outputs.DB_RESULT }}
        ODOO_CONFIG: ${{inputs.MAIN_PATH}}/config_local/odoo-server.conf
        MAIN_PATH: ${{ inputs.MAIN_PATH }}
        exclusive_update: ${{ inputs.exclusive_update }}

    - name: Hard update (base module)
      if: ${{ inputs.base_update == 'true' }}
      uses: biko-solutions/cicd_workflows/.github/actions/self-hosted-run/common/update-base@main
      with:
        ODOO_SERVICE: ${{ inputs.ODOO_SERVICE }}
        USE_VENV: ${{ inputs.USE_VENV }}
        SERVER_USER: ${{ inputs.SERVER_USER }}
        PYTHON_SCRIPT: ${{ steps.create-python-script.outputs.PYTHON_SCRIPT }}
        DB_LIST: ${{ steps.get-db-list.outputs.DB_RESULT }}
        ODOO_CONFIG: ${{inputs.MAIN_PATH}}/config_local/odoo-server.conf
        MAIN_PATH: ${{ inputs.MAIN_PATH }}

    - name: Update submodules HASH
      run: |
        echo -e "::group::\033[32m ============= UPDATING SUBMODULES HASH =============\033[0m"
        cd $MAIN_PATH
        sudo -u $SERVER_USER git submodule foreach --recursive git reset --hard > /dev/null 2>&1
        if [[ -n $(sudo -u $SERVER_USER git status -s) ]]; then
          sudo -u $SERVER_USER git config --global user.name github-actions[bot]
          sudo -u $SERVER_USER git config --global user.email github-actions[bot]@users.noreply.github.com
          sudo -u $SERVER_USER git add -A
          sudo -u $SERVER_USER git commit -m "Update submodules"
          sudo -u $SERVER_USER git push origin $(git branch --show-current)
          sudo -u $SERVER_USER sh odoo_set_icons.sh 2>/dev/null || true
        else
          sudo -u $SERVER_USER sh odoo_set_icons.sh 2>/dev/null || true
          echo "No submodule updates."
        fi
        echo "::endgroup::"
      env:
        MAIN_PATH: ${{ inputs.MAIN_PATH }}
        SERVER_USER: ${{ inputs.SERVER_USER }}
      shell: bash

    - uses: colpal/actions-clean@v1
      if: ${{ always() }}
